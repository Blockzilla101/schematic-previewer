#!/usr/bin/bash

lastDir=`pwd`

# read current hashes
spriteHashOld=`cat sprites-hash`

cd ../Mindustry

# keep track of last branch in mindustry
temp=`git status 2> /dev/null | head -n 1`;
branch="master";
if [[ ! ${temp} =~ ^HEAD* ]]; then
    branch=${temp:10}
fi

# calculate new sprite hashes
cut -c 1-64 <<< `find "./core/assets-raw/sprites_out" -type f | xargs -L 1 sha256sum` | sort | sha256sum | cut -c 1-64 > temp
spriteHash=`cat temp`
rm temp

# create new sprites if the duffer
if [[ "${spriteHashOld}" != "${spriteHash}" ]]; then
    echo "Sprite hashes differ"
    git checkout master
    ./gradlew tools:pack --no-daemon

    # checkout the last branch in mindustry
    git checkout "${branch}"
fi

cd "${lastDir}"

# write new hashes
echo "${spriteHash}" > sprites-hash

[[ -d "./assets" ]] && rm -rf "./assets"

echo "Copying sprites"

mkdir "./assets"
cp "../Mindustry/core/assets/sprites/error.png" "./assets"
cp "../Mindustry/core/assets/sprites/sprites.aatls" "./assets"
cp "../Mindustry/core/assets/sprites/schematic-background.png" "./assets"

cp -r "../Mindustry/core/assets-raw/sprites_out" "./assets"
mv "./assets/sprites_out" "./assets/sprites"

rm gradle.properties

lastDir=`pwd`
cd "../Mindustry"

mindHash=`git rev-parse HEAD`
arcHash=`tail -n1 gradle.properties | cut -c 9-`

cd "${lastDir}"

echo "mindustryHash=${mindHash}" >> gradle.properties
echo "arcHash=${arcHash}" >> gradle.properties

echo "Updated hashes"

./gradlew dist --no-daemon -q

if [[ ! $? == '0' ]]; then
    echo "Build Failed"
    exit 1
fi

# cp  ./build/libs/previewer.jar ../Botzilla/schematic-previewer.jar

[[ $# -ne 0 ]] && exit 1

scp ./build/libs/previewer.jar nydus:/tmp/schematic-previewer.jar
ssh nydus cp /tmp/schematic-previewer.jar /opt/botzilla/schematic-previewer.jar
ssh nydus rm /tmp/schematic-previewer.jar
